program = { SOI ~ decl* ~ EOI }

decl = { task | extern_task }

extern_task = { "extern" ~ "task" ~ (#name = ident) ~ "(" ~ arg_list? ~ ")" ~ ("->" ~ #returns = ident)? ~ ";" }

task = { "task" ~ (#name = ident) ~ "(" ~ arg_list? ~ ")" ~ ("->" ~ #returns = ident)? ~ "{" ~ (#body = statement)* ~ "}" }

arg_list = _{ (#arg = ident ~ ":" ~ #type = type ~ ",")* ~ (#arg = ident ~ ":" ~ #type = type) }

ident = @{ (ASCII_ALPHA | "_")+ ~ (ASCII_ALPHANUMERIC | "_")* }

type = @{ "&"* ~ ident }

statement = { #cond = conditional | (#var_decl = var_decl | (#return = return) | #sched = ("schedule" ~ call) | #exit = exit | (#expr = expression)) ~ ";" }
exit = { "exit" }
return = { "return" ~ expression? }
var_decl = { "var " ~ #name = ident ~ ":" ~ #type = ident ~ "=" ~ #value = expression }

conditional = { "if" ~ expression ~ "{" ~ #then = statement* ~ "}" ~ ("else" ~ (("{" ~ #else = statement* ~ "}") | conditional))? }

expression = { #call = call | equality }

equality = { comparison ~ (eq_op ~ comparison)* }
eq_op = {"==" | "!="}

comparison = { term ~ (cmp_op ~ term)* }
cmp_op = { ">" | ">=" | "<" | "<=" | "&&" | "||"}

term = { factor ~ (add_op ~ factor)* }
add_op = {"-" | "+"}

factor = { unary ~ (mul_op ~ unary)* }
mul_op = { "/" | "*" }

unary = { un_op ~ unary | primary }
un_op = { "!" | "-" | "*" | "&" }

primary = { value | ident | "(" ~ expression ~ ")" }

call = { #task = ident ~ "(" ~ param_list? ~ ")" }

param_list = _{ (#arg = expression ~ ",")* ~ #arg = expression }

value = { string | #int = ASCII_DIGIT+ | #bool = ("true" | "false") }

string = @{ "\"" ~ (!"\"" ~ ANY)* ~ "\"" }

WHITESPACE = _{ WHITE_SPACE | NEWLINE }

COMMENT = _{ "/*" ~ (!"*/" ~ ANY)* ~ "*/" | "//" ~ (!NEWLINE ~ ANY)* ~ NEWLINE }